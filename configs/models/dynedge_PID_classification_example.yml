arguments:
  coarsening: null
  detector:
    ModelConfig:
      arguments:
        graph_builder:
          ModelConfig:
            arguments: {columns: null, nb_nearest_neighbours: 8}
            class_name: KNNGraphBuilder
        scalers: null
      class_name: Prometheus
  gnn:
    ModelConfig:
      arguments:
        add_global_variables_after_pooling: false
        dynedge_layer_sizes: null
        features_subset: null
        global_pooling_schemes: [min, max, mean, sum]
        nb_inputs: 4
        nb_neighbours: 8
        post_processing_layer_sizes: null
        readout_layer_sizes: null
      class_name: DynEdge
  optimizer_class: '!class torch.optim.adam Adam'
  optimizer_kwargs: {eps: 1e-03, lr: 1e-05}
  scheduler_class: '!class torch.optim.lr_scheduler ReduceLROnPlateau'
  scheduler_config: {frequency: 1, monitor: val_loss}
  scheduler_kwargs: {patience: 1}
  tasks:
  - ModelConfig:
      arguments:
        nb_outputs: 3 # number of classes
        hidden_size: 128
        loss_function:
          ModelConfig:
            arguments: {options: {1: 0, -1: 0, 13: 1, -13: 1, 12: 2, -12: 2, 14: 2, -14: 2, 16: 2, -16: 2}}
            class_name: CrossEntropyLoss
        loss_weight: null
        target_labels: dummy_pid
        transform_inference: '!lambda x: torch.nn.functional.softmax(x, dim=-1)'
        transform_prediction_and_target: null
        transform_support: null
        transform_target: null
      class_name: MulticlassClassificationTask
class_name: StandardModel
